import config from './config.js';
import { Pool } from 'pg';

console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
console.log('');
console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ config:');
console.log('   user:', config.database.user);
console.log('   host:', config.database.host);
console.log('   database:', config.database.database);
console.log('   password:', config.database.password);
console.log('   port:', config.database.port);
console.log('');

const pool = new Pool({
  user: config.database.user,
  host: config.database.host,
  database: config.database.database,
  password: config.database.password,
  port: config.database.port,
});

async function testBotConnection() {
  try {
    const client = await pool.connect();
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫ –∫–∞–∫–æ–π –±–∞–∑–µ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å
    const dbResult = await client.query('SELECT current_database(), current_user');
    console.log('üìç –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –±–∞–∑–µ:', dbResult.rows[0].current_database);
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', dbResult.rows[0].current_user);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ user_settings
    try {
      const userSettingsTest = await client.query('SELECT COUNT(*) FROM public.user_settings');
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_settings –Ω–∞–π–¥–µ–Ω–∞! –ó–∞–ø–∏—Å–µ–π:', userSettingsTest.rows[0].count);
    } catch (error) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ user_settings –ù–ï –Ω–∞–π–¥–µ–Ω–∞:', error.message);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Å—Ö–µ–º—ã
      try {
        const userSettingsTest2 = await client.query('SELECT COUNT(*) FROM user_settings');
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_settings (–±–µ–∑ —Å—Ö–µ–º—ã) –Ω–∞–π–¥–µ–Ω–∞! –ó–∞–ø–∏—Å–µ–π:', userSettingsTest2.rows[0].count);
      } catch (error2) {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ user_settings (–±–µ–∑ —Å—Ö–µ–º—ã) —Ç–æ–∂–µ –ù–ï –Ω–∞–π–¥–µ–Ω–∞:', error2.message);
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å—Ç—å
      const tables = await client.query(`
        SELECT table_name FROM information_schema.tables 
        WHERE table_schema = 'public' 
        ORDER BY table_name
      `);
      console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ —ç—Ç–æ–π –±–∞–∑–µ:');
      if (tables.rows.length > 0) {
        tables.rows.forEach(row => console.log('   -', row.table_name));
      } else {
        console.log('   ‚ùå –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }
    }
    
    client.release();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
  } finally {
    await pool.end();
  }
}

testBotConnection(); 