import config from './config.js';
import { Pool } from 'pg';

console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ Node.js...');

const pool = new Pool({
  user: config.database.user,
  host: config.database.host,
  database: config.database.database,
  password: config.database.password,
  port: config.database.port,
});

async function createTablesFromNode() {
  try {
    const client = await pool.connect();
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É user_settings
    await client.query(`
      CREATE TABLE IF NOT EXISTS user_settings (
        id SERIAL PRIMARY KEY,
        user_id BIGINT NOT NULL UNIQUE,
        notifications_enabled BOOLEAN DEFAULT TRUE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_settings —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ Node.js');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å
    const count = await client.query('SELECT COUNT(*) FROM user_settings');
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_settings –¥–æ—Å—Ç—É–ø–Ω–∞! –ó–∞–ø–∏—Å–µ–π:', count.rows[0].count);
    
    client.release();
    console.log('üéâ –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Node.js —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await pool.end();
  }
}

createTablesFromNode(); 