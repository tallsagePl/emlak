#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ Emlak

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

PROJECT_DIR="emlak"
REPO_URL="https://github.com/your-username/emlak.git"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

echo -e "${BLUE}üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ Emlak${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç
if ! docker info &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω –∏ –≤—ã –≤ –≥—Ä—É–ø–ø–µ docker${NC}"
    echo -e "${YELLOW}–í—ã–ø–æ–ª–Ω–∏—Ç–µ: newgrp docker${NC}"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é apps
cd ~/apps

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
if [ -d "$PROJECT_DIR" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–∞–ø–∫–∞ $PROJECT_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª–∏—Ç—å –∏ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ? (y/n)${NC}"
    read -r response
    if [[ "$response" == "y" ]]; then
        rm -rf "$PROJECT_DIR"
    else
        echo -e "${BLUE}üìÅ –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É...${NC}"
        cd "$PROJECT_DIR"
        git pull origin master
    fi
fi

if [ ! -d "$PROJECT_DIR" ]; then
    echo -e "${BLUE}üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
    git clone "$REPO_URL" "$PROJECT_DIR"
    cd "$PROJECT_DIR"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞
echo -e "${BLUE}‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

if [ ! -f ".env" ]; then
    if [ -f ".env.prod" ]; then
        cp .env.prod .env
        echo -e "${GREEN}‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω .env.prod –≤ .env${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –°–æ–∑–¥–∞—é .env —Ñ–∞–π–ª...${NC}"
        cat > .env << EOF
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=emlak
POSTGRES_USER=emlak
POSTGRES_PASSWORD=emlak_secure_password_123

# Telegram –±–æ—Ç —Ç–æ–∫–µ–Ω (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–ï!)
BOT_TOKEN=your_bot_token_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞
HEPSIEMLAK_SCHEDULE=0 10,16,22 * * *
EMLAKJET_SCHEDULE=15 10,16,22 * * *

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Puppeteer
PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
EOF
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
if grep -q "your_bot_token_here" .env; then
    echo -e "${RED}‚ùå –í–ù–ò–ú–ê–ù–ò–ï! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ${NC}"
    echo -e "${YELLOW}–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env –∏ –∑–∞–º–µ–Ω–∏—Ç–µ your_bot_token_here –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω${NC}"
    echo -e "${BLUE}–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: nano .env${NC}"
    
    while true; do
        echo -e "${YELLOW}–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Å–µ–π—á–∞—Å? (y/n)${NC}"
        read -r response
        if [[ "$response" == "y" ]]; then
            nano .env
            break
        elif [[ "$response" == "n" ]]; then
            break
        fi
    done
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker-compose down --volumes 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo -e "${BLUE}üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤...${NC}"
docker system prune -f || true

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${BLUE}üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker-compose up --build -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo -e "${BLUE}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${BLUE}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo -e "${BLUE}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:${NC}"
echo -e "${YELLOW}=== PostgreSQL ===${NC}"
docker-compose logs postgres | tail -5

echo -e "${YELLOW}=== Bot ===${NC}"
docker-compose logs bot | tail -5

echo -e "${YELLOW}=== Parser ===${NC}"
docker-compose logs parser | tail -5

# –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
echo -e "${GREEN}üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${BLUE}üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "  üìä –°—Ç–∞—Ç—É—Å:           ${YELLOW}docker-compose ps${NC}"
echo -e "  üìã –õ–æ–≥–∏:             ${YELLOW}docker-compose logs <service>${NC}"
echo -e "  üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:       ${YELLOW}docker-compose restart${NC}"
echo -e "  üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞:        ${YELLOW}docker-compose down${NC}"
echo -e "  üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:       ${YELLOW}git pull && docker-compose up --build -d${NC}"

echo -e "${BLUE}üåê –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:${NC}"
echo -e "  üêò PostgreSQL:       ${YELLOW}localhost:5432${NC}"
echo -e "  ü§ñ Telegram Bot:     ${YELLOW}–†–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏${NC}"
echo -e "  üîç Parser:           ${YELLOW}–†–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
echo -e "${BLUE}üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...${NC}"
if docker-compose ps | grep -q "Up"; then
    echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
else
    echo -e "${RED}‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å${NC}"
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs${NC}"
fi 