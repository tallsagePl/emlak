#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Emlak –Ω–∞ Ubuntu 22.04

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Emlak –Ω–∞ Ubuntu 22.04${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ Ubuntu
if [ ! -f /etc/os-release ]; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é –û–°${NC}"
    exit 1
fi

source /etc/os-release
if [[ "$NAME" != "Ubuntu" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu, –Ω–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞: $NAME${NC}"
    echo -e "${YELLOW}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n)${NC}"
    read -r response
    if [[ "$response" != "y" ]]; then
        exit 1
    fi
fi

echo -e "${GREEN}‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞: $PRETTY_NAME${NC}"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo -e "${BLUE}üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤...${NC}"
sudo apt update

echo -e "${BLUE}‚¨ÜÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo -e "${BLUE}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...${NC}"
sudo apt install -y \
    curl \
    wget \
    git \
    unzip \
    htop \
    nano \
    vim \
    build-essential \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo -e "${BLUE}üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker...${NC}"
if command -v docker &> /dev/null; then
    echo -e "${GREEN}‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π Docker
    sudo apt remove -y docker docker-engine docker.io containerd runc 2>/dev/null || true
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ GPG –∫–ª—é—á–∞ Docker
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    sudo usermod -aG docker $USER
    
    echo -e "${GREEN}‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose (standalone)
echo -e "${BLUE}üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose...${NC}"
if command -v docker-compose &> /dev/null; then
    echo -e "${GREEN}‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ Docker Compose
    DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -o -P '(?<="tag_name": ")[^"]*')
    sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    
    echo -e "${GREEN}‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∏ npm
echo -e "${BLUE}üì± –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js...${NC}"
if command -v node &> /dev/null; then
    echo -e "${GREEN}‚úÖ Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $(node --version))${NC}"
else
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18.x
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt install -y nodejs
    
    echo -e "${GREEN}‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $(node --version))${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yarn
echo -e "${BLUE}üß∂ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yarn...${NC}"
if command -v yarn &> /dev/null; then
    echo -e "${GREEN}‚úÖ Yarn —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
else
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yarn —á–µ—Ä–µ–∑ npm
    sudo npm install -g yarn
    
    echo -e "${GREEN}‚úÖ Yarn —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall (UFW)
echo -e "${BLUE}üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall...${NC}"
sudo ufw --force enable
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw allow 5432/tcp  # PostgreSQL (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø)

echo -e "${GREEN}‚úÖ Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
mkdir -p ~/apps
cd ~/apps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π
echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤–µ—Ä—Å–∏–π:${NC}"
echo -e "${GREEN}Docker: $(docker --version)${NC}"
echo -e "${GREEN}Docker Compose: $(docker-compose --version)${NC}"
echo -e "${GREEN}Node.js: $(node --version)${NC}"
echo -e "${GREEN}NPM: $(npm --version)${NC}"
echo -e "${GREEN}Yarn: $(yarn --version)${NC}"
echo -e "${GREEN}Git: $(git --version)${NC}"

echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo -e "${BLUE}üìù –ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"
echo -e "1. –ü–µ—Ä–µ–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ${YELLOW}newgrp docker${NC}"
echo -e "2. –°–∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${YELLOW}git clone <your-repo-url> emlak${NC}"
echo -e "3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É: ${YELLOW}cd emlak${NC}"
echo -e "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞"
echo -e "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: ${YELLOW}docker-compose up -d${NC}"

echo -e "${YELLOW}‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–µ docker!${NC}" 