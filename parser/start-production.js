import chalk from 'chalk';
import { ProductionScheduler } from './production-scheduler.js';

// Graceful shutdown
let scheduler = null;

async function shutdown() {
  console.log(chalk.yellow('\n‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–æ–≤...'));
  if (scheduler) {
    await scheduler.shutdown();
  }
  console.log(chalk.green('‚úÖ –ü–∞—Ä—Å–µ—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã'));
  process.exit(0);
}

process.on('SIGINT', shutdown);
process.on('SIGTERM', shutdown);

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
(async () => {
  try {
    console.log(chalk.blue('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω –ø–∞—Ä—Å–µ—Ä–æ–≤...'));
    
    scheduler = new ProductionScheduler();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫
    await scheduler.init();
    scheduler.start();
    
    console.log(chalk.green('‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω –ø–∞—Ä—Å–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é'));
    console.log(chalk.cyan('üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:'));
    console.log('   üè† HepsEmlak: –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞ –≤ 00 –º–∏–Ω—É—Ç');  
    console.log('   üè° EmlakJet: –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞ –≤ 15 –º–∏–Ω—É—Ç');
    console.log('');
    console.log(chalk.yellow('‚ö†Ô∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C'));
    
    // –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–Ω—ã–º
    setInterval(() => {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∂–¥—ã–π —á–∞—Å
      const stats = scheduler.getStats();
      if (stats.lastRunTime) {
        const timeSince = Math.round((Date.now() - new Date(stats.lastRunTime)) / (1000 * 60));
        console.log(chalk.gray(`‚è∞ ${new Date().toLocaleString('ru-RU')} | –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—É—Å–∫: ${timeSince} –º–∏–Ω –Ω–∞–∑–∞–¥ | –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä—Å–µ—Ä–æ–≤: ${Object.keys(stats.parsers).filter(p => stats.parsers[p].enabled).length}`));
      }
    }, 60 * 60 * 1000); // –ö–∞–∂–¥—ã–π —á–∞—Å
    
  } catch (error) {
    console.error(chalk.red('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤:'), error.message);
    process.exit(1);
  }
})(); 